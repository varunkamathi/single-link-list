#include <stdlib.h>

#include <stdio.h>

struct node
{
    int data;
    struct node *next;
};struct node *head, *newnode, *temp, *ptr;
// newnode = (struct node*)malloc(sizeof(struct node));
 
void inserting_beg(){   

newnode = (struct node*)malloc(sizeof(struct node));
printf("enter data :");
scanf("%d",&newnode->data);
 newnode->next = head;
 head=newnode;//null ==0
/*** if(head == NULL){
     head=temp = newnode;
 }
 else{
     temp->next=newnode;
     temp = newnode;
 }**/
 } 

void inserting_end(){   

newnode = (struct node*)malloc(sizeof(struct node));
printf("enter data :");
scanf("%d",&newnode->data);
 newnode->next = NULL;//null ==0
 if(head == NULL){
     head=temp=newnode;
 }
 else{
     temp->next=newnode;
     temp = newnode;
 }
 
}
void delete_beg(){
    if(head == NULL){
        printf("liked list is empty");
    }
    else{
        
        temp=head;
        head=head->next;
        free(temp);
    }
}
void delete_end(){
    if(head == NULL){
        printf("liked list is empty");
    }
    else{
        
        temp=head;
        while(temp->next!=0){
            ptr = temp;
        temp = temp->next;}
        ptr->next=0;//ptr = previous
        free(temp);
    }}
void delete_pos(){
    if(head == NULL){
        printf("liked list is empty");
    }
    else{
        int pos,i=1;
        temp=head;
        printf("enter the pos :");//pos=postion
        scanf("%d",&pos);
        while(i<pos-1){
            temp=temp->next;
            i++;}
            ptr = temp->next;//ptr = next node
        temp->next=ptr->next;
        
        free(ptr);
    }}  
    void insert_pos(){
        newnode = (struct node*)malloc(sizeof(struct node));
        int pos,i=1;
        printf("enter the pos :");//pos=postion
        scanf("%d",&pos);
       
       
        temp=head;
        
        while(i<pos){
            temp=temp->next;
            i++;}printf("enter the data :");
                  scanf("%d",&newnode->data) ;
                  newnode->next=temp->next;
                  temp->next=newnode;
            }
void display(){

    if(head==0){
        printf("linked list empty");
    }else{temp=head;
        while(temp!=NULL){
    printf("%d->",temp->data);
    temp=temp->next;
}}}
int main(){
    int ch;
    do{printf("\n1.insert at beg\n2.insert at end\n3.display\n4.delete at beg\n5.delete at end\n6.delete at pos\n7.insert at pos\n8.exit\n");
       printf("enter the ch :");
    scanf("%d",&ch);
    switch(ch){
        case 1:
           inserting_beg();
           break;
        case 2 :
           inserting_end();
           break;
        case 3:
           display();
           break;
        case 4:
            delete_beg();
            break;
        case 5:
            delete_end();
            break;   
        case 6:
            delete_pos();
            break;  
         case 7:
            insert_pos();
            
            break;      
        case 8:
             exit(0);
    }
}while(ch!=8);
}